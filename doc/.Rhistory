library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.csv("../data/ml-latest-small/ratings.csv")
set.seed(0)
test_idx <- sample(1:nrow(data), round(nrow(data)/5, 0))
train_idx <- setdiff(1:nrow(data), test_idx)
data_train <- data[train_idx,]
data_test <- data[test_idx,]
U <- length(unique(data$userId))
I <- length(unique(data$movieId))
source("../lib/Matrix_Factorization.R")
source("../lib/cross_validation.R")
f_list <- seq(10, 20, 10)
l_list <- seq(-2, -1, 1)
f_l <- expand.grid(f_list, l_list)
U <- length(unique(data$userId)) #number of users
I <- length(unique(data$movieId)) #number of movies
source("../lib/Matrix_Factorization.R")
result_summary <- array(NA, dim = c(nrow(f_l), 10, 4))
run_time <- system.time(for(i in 1:nrow(f_l)){
par <- paste("f = ", f_l[i,1], ", lambda = ", 10^f_l[i,2])
cat(par, "\n")
current_result <- cv.function(data, K = 5, f = f_l[i,1], lambda = 10^f_l[i,2])
result_summary[,,i] <- matrix(unlist(current_result), ncol = 10, byrow = T)
print(result_summary)
})
View(gradesc)
View(data)
unique(data$movieId)
x<-matrix(runif(5, -1, 1), ncol = 3)
View(x)
x<-matrix(runif(6, -1, 1), ncol = 3)
View(x)
x<-matrix(runif(2, -1, 1), ncol = 3)
x<-matrix(runif(6, -1, 1), ncol = 3)
View(data)
